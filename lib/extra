
  TextEditingController pSerialNumberController = new TextEditingController();
  TextEditingController pFirstNameController = new TextEditingController();
  TextEditingController pMiddleNameController = new TextEditingController();
  TextEditingController pLastNameController = new TextEditingController();
  TextEditingController pExtController = new TextEditingController();
  TextEditingController pBirthdayController = new TextEditingController();
  TextEditingController pGenderController = new TextEditingController();

  File jsonFile;
  Directory dir;
  String fileName = "sampleJSONFile.json";
  bool fileExists = false;
  Map<String, dynamic> fileContent;

  @override
  void initState(){
    super.initState();
    getApplicationDocumentsDirectory().then((Directory directory){
      dir = directory;
      jsonFile = new File(dir.path + "/" + fileName);
      fileExists = jsonFile.existsSync();
      if(fileExists) this.setState(() => fileContent = json.decode(jsonFile.readAsStringSync()));
    });
  }

  @override
  void dispose() {
    pSerialNumberController.dispose();
    pFirstNameController.dispose();
    pMiddleNameController.dispose();
    pLastNameController.dispose();
    pExtController.dispose();
    pBirthdayController.dispose();
    pGenderController.dispose();
    super.dispose();
  }

  File createFile(Map<String, dynamic> content, Directory dir, String fileName){
    print("Creating file");
    File file = new File(dir.path + "/" + fileName);
    file.createSync();
    fileExists = true;
    file.writeAsStringSync(json.encode(content));
    return file;
  }

  void writeToFile(String key, dynamic value){
    Map<String, dynamic> content = {key: value};
    if(fileExists){
      Map<String, dynamic> jsonFileContent = json.decode(jsonFile.readAsStringSync());
      jsonFileContent.addAll(content);
      jsonFile.writeAsStringSync(json.encode(jsonFileContent));
    } else{
      createFile(content, dir, fileName);
    }
    this.setState(() => fileContent = json.decode(jsonFile.readAsStringSync()));
  }